% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Calculate_HAI_rate.R
\name{calc_HAI}
\alias{calc_HAI}
\title{Calculate HAI Rate
Given a data frame with column for cluster ID.}
\usage{
calc_HAI(clusterID = NULL, method = "naive", alpha = 1,
  N = length(clusterID), bias = TRUE, bias_reps = 10, CI = FALSE,
  CI_reps = 1000, level = 0.95)
}
\arguments{
\item{clusterID}{A vector of clusterIDs, one for each patient.}

\item{method}{A character string denoting which method to use.}

\item{alpha}{The sampling fraction.}

\item{N}{The population size from which the sample was taken.}

\item{bias}{Should we do a bias correction?}

\item{bias_reps}{The number of subsamples we should create for
estimating the bias.}

\item{CI}{Should we calculate a bootstrap confidence interval
in addition to the CI from the bias replicates}

\item{CI_reps}{The number of boostrap samples to create for
calculating the bootstrap CI.}

\item{level}{The confidence interval level.}
}
\value{
A vector with the estimated Hospital Acquired Infection Rate
  and associatied confidence intervals.
}
\description{
Calculate HAI Rate
Given a data frame with column for cluster ID.
}
\examples{
pop <- generate_population(1000, lambda = .6, mix.frac = .01)

pop \%>\% pull(clusterID) \%>\%
  calc_HAI( method='naive', bias=FALSE, CI=FALSE )

clusterID <- pop \%>\% sample_frac(.5) \%>\% pull(clusterID)
calc_HAI(clusterID, method='naive', alpha=.5, N=nrow(pop), bias=TRUE, CI=TRUE, CI_reps=100)



calc_HAI(clusterID, method='hypergeometric', alpha=.5, N=nrow(pop), bias=FALSE)
calc_HAI(clusterID, method='hypergeometric', alpha=.5, N=nrow(pop), bias=TRUE)

pop \%>\% sample_frac(.5) \%>\% pull(clusterID) \%>\%
  calc_HAI( method='hypergeometric', alpha=.5, N=nrow(pop), bias=TRUE)

pop \%>\% group_by(Aquired) \%>\% count() \%>\% group_by() \%>\%        # doing it straight
    mutate(percent = n / sum(n))                                # using metadata
pop \%>\% group_by(clusterID) \%>\% count() \%>\% pull(n) \%>\%         # via calc_HAI
  calc_HAI( . )

pop \%>\% sample_frac( .5 ) \%>\% group_by(clusterID) \%>\% count() \%>\% pull(n) \%>\%
  calc_HAI( ., alpha=.5, N=nrow(pop), method = 'naive' )
pop \%>\% sample_frac( .5 ) \%>\% group_by(clusterID) \%>\% count() \%>\% pull(n) \%>\%
  calc_HAI( ., alpha=.5, N=nrow(pop), method = 'HypergeometricPoisson')
pop \%>\% sample_frac( .5 ) \%>\% group_by(clusterID) \%>\% count() \%>\% pull(n) \%>\%
  calc_HAI( ., alpha=.5, N=nrow(pop), method = 'chao')


out <- NULL
for( lambda in c( 0.5, 1, 1.5, 2) ){
  for( alpha in c( .25, .5, .75, 1) ){
    for( i in 1:4 ){
      N <- 1000
      pop <- generate_population(N, lambda = lambda, mix.frac = 0)
      HAI <- pop \%>\% group_by(clusterID) \%>\% count() \%>\% pull(n) \%>\% calc_HAI( . )
      for(method in c('naive','hypergeometric','chao','jack1', 'jack2', 'boot') ){
        Est.HAI <-pop \%>\% sample_frac( alpha ) \%>\% group_by(clusterID) \%>\%
                   count() \%>\% pull(n) \%>\%
                   calc_HAI( alpha=alpha, N=nrow(pop), method = method)

        out <- rbind(out, data.frame(
             alpha = alpha, lambda = lambda, method = method, rep = i,
             HAI = HAI, Est.HAI=Est.HAI))
      }
    }
  }
}
ggplot( out, aes( x=HAI, y=Est.HAI, color=method )) +
  geom_point(alpha=.5) +
  facet_grid(method ~ alpha) +
  geom_abline(intercept = 0, slope=1, color='red')

out \%>\% group_by(alpha) \%>\% summarize(mean=mean(HAI))

}
